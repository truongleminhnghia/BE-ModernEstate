// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModernEstate.DAL.Context;

#nullable disable

namespace ModernEstate.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbConext))]
    [Migration("20250520165354_updateEntityV6")]
    partial class updateEntityV6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ModernEstate.DAL.Entites.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("address");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("email");

                    b.Property<string>("EnumAccountStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_status");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EnumAccountStatus");

                    b.HasIndex("RoleId");

                    b.ToTable("account");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.AccountBuyService", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("account_service_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("char(36)")
                        .HasColumnName("service_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<int>("SubscriptionTerm")
                        .HasColumnType("int")
                        .HasColumnName("subscription_term");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("double")
                        .HasColumnName("total_amount");

                    b.Property<string>("UnitSubscriptionTerm")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("unit_subscription_term");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ServiceId");

                    b.ToTable("account_service");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("address_id");

                    b.Property<string>("AddressDetail")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("address_detail");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("district");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("house_number");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ward");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "City" }, "IX_Address_City");

                    b.HasIndex(new[] { "District" }, "IX_Address_District");

                    b.HasIndex(new[] { "HouseNumber" }, "IX_Address_HouseNumber");

                    b.HasIndex(new[] { "Street" }, "IX_Address_Street");

                    b.HasIndex(new[] { "Ward" }, "IX_Address_Ward");

                    b.ToTable("address");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Broker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("broker_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex(new[] { "AccountId" }, "IX_Broker_AccountId");

                    b.HasIndex(new[] { "Code" }, "IX_Broker_Code")
                        .IsUnique();

                    b.ToTable("broker");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("category_id");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CategoryName" }, "IX_Category_CategoryName");

                    b.HasIndex(new[] { "Id" }, "IX_Category_Id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("contact_id");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("contact_email");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("contact_name");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasColumnName("contact_phone");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ContactEmail" }, "IX_Contact_ContactEmail");

                    b.HasIndex(new[] { "ContactName" }, "IX_Contact_ContactName");

                    b.HasIndex(new[] { "ContactPhone" }, "IX_Contact_ContactPhone");

                    b.ToTable("contact");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("employee_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex(new[] { "AccountId" }, "IX_Employee_AccountId");

                    b.HasIndex(new[] { "Code" }, "IX_Employee_Code")
                        .IsUnique();

                    b.ToTable("employee");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Favorite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("favorite_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PropertyId")
                        .HasColumnType("char(36)")
                        .HasColumnName("property_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AccountId" }, "IX_Favorite_AccountId");

                    b.HasIndex(new[] { "Id" }, "IX_Favorite_Id");

                    b.HasIndex(new[] { "PropertyId" }, "IX_Favorite_PropertyId");

                    b.ToTable("favorite");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("history_id");

                    b.Property<string>("ChangeBy")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("change_by");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime")
                        .HasColumnName("change_date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("char(36)")
                        .HasColumnName("project_id");

                    b.Property<Guid?>("PropertyId")
                        .HasColumnType("char(36)")
                        .HasColumnName("property_id");

                    b.Property<string>("ReasonChange")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("reason_change");

                    b.Property<string>("TypeHistory")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("type_history");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("PropertyId");

                    b.HasIndex(new[] { "ChangeBy" }, "IX_History_ChangeBy");

                    b.HasIndex(new[] { "ChangeDate" }, "IX_History_ChangeDate");

                    b.HasIndex(new[] { "ReasonChange" }, "IX_History_ReasonChange");

                    b.HasIndex(new[] { "TypeHistory" }, "IX_History_TypeHistory");

                    b.ToTable("history");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("image_id");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("image_url");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("char(36)")
                        .HasColumnName("project_id");

                    b.Property<Guid?>("PropertyId")
                        .HasColumnType("char(36)")
                        .HasColumnName("property_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProjectId" }, "IX_Image_ProjectId");

                    b.HasIndex(new[] { "PropertyId" }, "IX_Image_PropertyId");

                    b.ToTable("image");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Invetor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("invertor_id");

                    b.Property<string>("Avatar")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("avatar");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("company_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("InvetorType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("invetor_type");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone_number");

                    b.Property<string>("TaxCode")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tax_code");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Code" }, "IX_Invetor_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "CompanyName" }, "IX_Invetor_CompanyName");

                    b.HasIndex(new[] { "Email" }, "IX_Invetor_Email");

                    b.HasIndex(new[] { "Id" }, "IX_Invetor_Id");

                    b.HasIndex(new[] { "PhoneNumber" }, "IX_Invetor_PhoneNumber");

                    b.HasIndex(new[] { "TaxCode" }, "IX_Invetor_TaxCode");

                    b.ToTable("invetor");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.New", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("new_id");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)")
                        .HasColumnName("category_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("image_url");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime")
                        .HasColumnName("publish_date");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("slug");

                    b.Property<string>("StatusNew")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status_new");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AccountId" }, "IX_New_AccountId");

                    b.HasIndex(new[] { "CategoryId" }, "IX_New_CategoryId");

                    b.HasIndex(new[] { "PublishDate" }, "IX_New_PublishDate");

                    b.HasIndex(new[] { "Slug" }, "IX_New_Slug");

                    b.HasIndex(new[] { "StatusNew" }, "IX_New_StatusNew");

                    b.HasIndex(new[] { "Title" }, "IX_New_Title");

                    b.ToTable("new");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.NewTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("new_tag_id");

                    b.Property<Guid>("NewId")
                        .HasColumnType("char(36)")
                        .HasColumnName("new_id");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tag_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_NewTag_Id");

                    b.HasIndex(new[] { "NewId" }, "IX_NewTag_NewId");

                    b.HasIndex(new[] { "TagId" }, "IX_NewTag_TagId");

                    b.ToTable("new_tag");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.OwnerProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("owner_property_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex(new[] { "AccountId" }, "IX_OwnerProperty_AccountId");

                    b.HasIndex(new[] { "Code" }, "IX_OwnerProperty_Code")
                        .IsUnique();

                    b.HasIndex(new[] { "Id" }, "IX_OwnerProperty_Id");

                    b.ToTable("owner_property");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Package", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("package_id");

                    b.Property<string>("AccessPriority")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("access_priority");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<int>("DurationDays")
                        .HasColumnType("int")
                        .HasColumnName("duration_days");

                    b.Property<ulong>("Highlighted")
                        .HasColumnType("bit")
                        .HasColumnName("highlighted");

                    b.Property<int>("MaxPosts")
                        .HasColumnType("int")
                        .HasColumnName("max_posts");

                    b.Property<string>("PackageCode")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("package_code");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("varchar(400)")
                        .HasColumnName("package_name");

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnName("price");

                    b.Property<ulong>("TopListing")
                        .HasColumnType("bit")
                        .HasColumnName("top_listing");

                    b.Property<string>("TypePackage")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type_package");

                    b.HasKey("Id");

                    b.HasIndex("AccessPriority");

                    b.HasIndex("Highlighted");

                    b.HasIndex("MaxPosts");

                    b.HasIndex("PackageCode")
                        .IsUnique();

                    b.HasIndex("Price");

                    b.HasIndex("TopListing");

                    b.HasIndex("TypePackage");

                    b.ToTable("package");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("post_id");

                    b.Property<string>("AppRovedBy")
                        .IsRequired()
                        .HasColumnType("varchar(400)")
                        .HasColumnName("approve_by");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("code");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("char(36)")
                        .HasColumnName("contact_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("PostBy")
                        .IsRequired()
                        .HasColumnType("varchar(400)")
                        .HasColumnName("post_by");

                    b.Property<Guid>("PropertyId")
                        .HasColumnType("char(36)")
                        .HasColumnName("property_id");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("text")
                        .HasColumnName("rejection_reason");

                    b.Property<string>("SourceStatus")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasColumnName("source_status");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasColumnName("state");

                    b.Property<Guid?>("SupportId")
                        .HasColumnType("char(36)")
                        .HasColumnName("support_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(400)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ContactId");

                    b.HasIndex("PropertyId");

                    b.HasIndex("SourceStatus");

                    b.HasIndex("State");

                    b.HasIndex("SupportId");

                    b.ToTable("post");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.PostPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("account_package_subscription_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("char(36)")
                        .HasColumnName("package_id");

                    b.Property<Guid?>("PostId")
                        .IsRequired()
                        .HasColumnType("char(36)")
                        .HasColumnName("post_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AccountId" }, "IX_Account_Package_Subscription_AccountId");

                    b.HasIndex(new[] { "EndDate" }, "IX_Account_Package_Subscription_EndDate");

                    b.HasIndex(new[] { "Id" }, "IX_Account_Package_Subscription_Id");

                    b.HasIndex(new[] { "PackageId" }, "IX_Account_Package_Subscription_PackageId");

                    b.HasIndex(new[] { "PostId" }, "IX_Account_Package_Subscription_PostId");

                    b.HasIndex(new[] { "StartDate" }, "IX_Account_Package_Subscription_StartDate");

                    b.HasIndex(new[] { "Status" }, "IX_Account_Package_Subscription_Status");

                    b.ToTable("account_package_subscriptions");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("project_id");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("char(36)")
                        .HasColumnName("address_id");

                    b.Property<string>("BlockName")
                        .HasColumnType("JSON")
                        .HasColumnName("block_name");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("InvetorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("invetor_id");

                    b.Property<float>("ProjectArea")
                        .HasColumnType("float")
                        .HasColumnName("project_area");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<int>("TotalBlock")
                        .HasColumnType("int")
                        .HasColumnName("total_block");

                    b.Property<int>("TotalFloor")
                        .HasColumnType("int")
                        .HasColumnName("total_floor");

                    b.Property<string>("TypeProject")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("type_project");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("InvetorId");

                    b.HasIndex("ProjectArea");

                    b.HasIndex("Status");

                    b.HasIndex("TypeProject");

                    b.ToTable("project", t =>
                        {
                            t.HasComment("Project entity representing a real estate project");
                        });
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("property_id");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("char(36)")
                        .HasColumnName("address_id");

                    b.Property<string>("Attribute")
                        .HasColumnType("JSON")
                        .HasColumnName("attribute");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("description");

                    b.Property<int>("NumberOfBathroom")
                        .HasColumnType("int")
                        .HasColumnName("number_of_toilet");

                    b.Property<int>("NumberOfBedroom")
                        .HasColumnType("int")
                        .HasColumnName("number_of_bedroom");

                    b.Property<int>("NumberOfFloor")
                        .HasColumnType("int")
                        .HasColumnName("number_of_floor");

                    b.Property<int>("NumberOfRoom")
                        .HasColumnType("int")
                        .HasColumnName("number_of_room");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("original_price");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("owner_id");

                    b.Property<string>("PriceText")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("price_text");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("char(36)");

                    b.Property<float>("PropertyArea")
                        .HasColumnType("float")
                        .HasColumnName("property_area");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sale_price");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("state");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasColumnName("title");

                    b.Property<string>("TypeProperty")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("type_property");

                    b.Property<string>("TypeTransaction")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("type_transaction");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AddressId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("OwnerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("property");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Provide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("provide_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_active");

                    b.Property<string>("ProvideDescription")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("provide_description");

                    b.Property<string>("ProvideEmail")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("provide_email");

                    b.Property<string>("ProvideImage")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("provide_image");

                    b.Property<string>("ProvideName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("provide_name");

                    b.Property<string>("ProvidePhone")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("provide_phone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Website")
                        .HasColumnType("varchar(150)")
                        .HasColumnName("website");

                    b.HasKey("Id");

                    b.ToTable("provide");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("role_id");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role_name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleName" }, "IX_Role_RoleName");

                    b.ToTable("role");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("service_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DurationDay")
                        .HasColumnType("int")
                        .HasColumnName("duration_day");

                    b.Property<ulong>("IsSystem")
                        .HasColumnType("bit")
                        .HasColumnName("is_system");

                    b.Property<double>("Price")
                        .HasColumnType("double")
                        .HasColumnName("price");

                    b.Property<Guid>("ProvideId")
                        .HasColumnType("char(36)")
                        .HasColumnName("provide_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)")
                        .HasColumnName("staus");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<string>("TypeService")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasColumnName("type_service");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_Service_Id");

                    b.HasIndex(new[] { "ProvideId" }, "IX_Service_ProvideId");

                    b.HasIndex(new[] { "Status" }, "IX_Service_Status");

                    b.HasIndex(new[] { "Title" }, "IX_Service_Title");

                    b.HasIndex(new[] { "TypeService" }, "IX_Service_TypeService");

                    b.ToTable("service");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Support", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("support_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<string>("SupportEmail")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("support_email");

                    b.Property<string>("SupportName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("support_name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("support");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("tag_id");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tag_name");

                    b.HasKey("Id");

                    b.ToTable("tag");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("transaction_id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_id");

                    b.Property<Guid?>("AccountServiceId")
                        .HasColumnType("char(36)")
                        .HasColumnName("account_service_id");

                    b.Property<double>("Amount")
                        .HasColumnType("double")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("currency");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("payment_method");

                    b.Property<Guid?>("PostPackageId")
                        .HasColumnType("char(36)")
                        .HasColumnName("post_package_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("status");

                    b.Property<string>("TransactionCode")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("transaction_code");

                    b.Property<string>("TypeTransaction")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("type_transaction");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AccountServiceId");

                    b.HasIndex("PaymentMethod");

                    b.HasIndex("PostPackageId");

                    b.HasIndex("Status");

                    b.HasIndex("TransactionCode")
                        .IsUnique();

                    b.HasIndex("TypeTransaction");

                    b.ToTable("transaction");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Account", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.AccountBuyService", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Account", "Account")
                        .WithMany("AccountServices")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernEstate.DAL.Entites.Service", "Service")
                        .WithMany("AccountServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Broker", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Account", "Account")
                        .WithOne("Broker")
                        .HasForeignKey("ModernEstate.DAL.Entites.Broker", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Employee", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Account", "Account")
                        .WithOne("Employee")
                        .HasForeignKey("ModernEstate.DAL.Entites.Employee", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Favorite", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Account", "Account")
                        .WithMany("Favorites")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernEstate.DAL.Entites.Property", "Property")
                        .WithMany("Favorites")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.History", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Project", "Project")
                        .WithMany("Histories")
                        .HasForeignKey("ProjectId");

                    b.HasOne("ModernEstate.DAL.Entites.Property", "Property")
                        .WithMany("Histories")
                        .HasForeignKey("PropertyId");

                    b.Navigation("Project");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Image", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Project", "Project")
                        .WithMany("Images")
                        .HasForeignKey("ProjectId");

                    b.HasOne("ModernEstate.DAL.Entites.Property", "Property")
                        .WithMany("PropertyImages")
                        .HasForeignKey("PropertyId");

                    b.Navigation("Project");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.New", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Account", "Account")
                        .WithMany("News")
                        .HasForeignKey("AccountId");

                    b.HasOne("ModernEstate.DAL.Entites.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.NewTag", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.New", "New")
                        .WithMany("NewTags")
                        .HasForeignKey("NewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernEstate.DAL.Entites.Tag", "Tag")
                        .WithMany("NewTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("New");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.OwnerProperty", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Account", "Account")
                        .WithOne("OwnerProperty")
                        .HasForeignKey("ModernEstate.DAL.Entites.OwnerProperty", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Post", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernEstate.DAL.Entites.Property", "Property")
                        .WithMany("Posts")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernEstate.DAL.Entites.Support", "Support")
                        .WithMany()
                        .HasForeignKey("SupportId");

                    b.Navigation("Contact");

                    b.Navigation("Property");

                    b.Navigation("Support");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.PostPackage", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Account", "Account")
                        .WithMany("PostPackages")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernEstate.DAL.Entites.Package", "Package")
                        .WithMany()
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernEstate.DAL.Entites.Post", "Post")
                        .WithMany("PostPackages")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Package");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Project", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernEstate.DAL.Entites.Invetor", "Invetor")
                        .WithMany("Projects")
                        .HasForeignKey("InvetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Invetor");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Property", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Account", null)
                        .WithMany("Properties")
                        .HasForeignKey("AccountId");

                    b.HasOne("ModernEstate.DAL.Entites.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernEstate.DAL.Entites.OwnerProperty", "Owner")
                        .WithMany("Properties")
                        .HasForeignKey("OwnerId");

                    b.HasOne("ModernEstate.DAL.Entites.Project", null)
                        .WithMany("Properties")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Address");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Service", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Provide", "Provide")
                        .WithMany("Services")
                        .HasForeignKey("ProvideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provide");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Transaction", b =>
                {
                    b.HasOne("ModernEstate.DAL.Entites.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModernEstate.DAL.Entites.AccountBuyService", "AccountBuyService")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountServiceId");

                    b.HasOne("ModernEstate.DAL.Entites.PostPackage", "PostPackage")
                        .WithMany("Transactions")
                        .HasForeignKey("PostPackageId");

                    b.Navigation("Account");

                    b.Navigation("AccountBuyService");

                    b.Navigation("PostPackage");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Account", b =>
                {
                    b.Navigation("AccountServices");

                    b.Navigation("Broker");

                    b.Navigation("Employee");

                    b.Navigation("Favorites");

                    b.Navigation("News");

                    b.Navigation("OwnerProperty");

                    b.Navigation("PostPackages");

                    b.Navigation("Properties");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.AccountBuyService", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Invetor", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.New", b =>
                {
                    b.Navigation("NewTags");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.OwnerProperty", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Post", b =>
                {
                    b.Navigation("PostPackages");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.PostPackage", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Project", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("Images");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Property", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Histories");

                    b.Navigation("Posts");

                    b.Navigation("PropertyImages");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Provide", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Service", b =>
                {
                    b.Navigation("AccountServices");
                });

            modelBuilder.Entity("ModernEstate.DAL.Entites.Tag", b =>
                {
                    b.Navigation("NewTags");
                });
#pragma warning restore 612, 618
        }
    }
}
